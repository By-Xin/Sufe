knitr::opts_chunk$set(echo = TRUE)
library(TSA)
install.packages("TSA")
# Z_t = a_t + 0.6a_t-1
library(TSA)
set.seed(1)
offset <- 300
n <- 36
theta <- -0.6
at <- rnorm(n+offset)
Zt <- NULL
Zt[1] <- at[1]-theta*0
for(i in 2:(n+offset)){
Zt[i] <- at[i]-theta*at[i-1]
}
plot(Zt)
plot(Zt,t)
Zt <- Zt[offset+1:offset+n]
Zt <- Zt[(offset+1):(offset+n)]
# Z_t = a_t + 0.6a_t-1
library(TSA)
set.seed(1)
offset <- 300
n <- 36
theta <- -0.6
at <- rnorm(n+offset)
Zt <- NULL
Zt[1] <- at[1]-theta*0
for(i in 2:(n+offset)){
Zt[i] <- at[i]-theta*at[i-1]
}
Zt <- Zt[(offset+1):(offset+n)]
plot(Zt,c(1:36))
plot(c(1:36),Zt)
plot(Zt)
plot(Zt, type = 'o', main = "", xlab = "t", ylab = expression(Z[t]))
par(mfrow=c(1,2),mar=c(4,4,2.5,1))
plot(Zt, type = 'o', main = "", xlab = "t", ylab = expression(Z[t]))
# Z_t = a_t + 0.6a_t-1
library(TSA)
set.seed(1)
offset <- 300
n <- 36
theta <- -0.6
at <- rnorm(n+offset)
Zt <- NULL
Zt[1] <- at[1]-theta*0
for(i in 2:(n+offset)){
Zt[i] <- at[i]-theta*at[i-1]
}
Zt <- Zt[(offset+1):(offset+n)]
par(mfrow=c(1,2),mar=c(4,4,2.5,1))
plot(Zt, type = 'o', main = "", xlab = "t", ylab = expression(Z[t]))
# Z_t = a_t + 0.6a_t-1
library(TSA)
set.seed(1)
offset <- 300
n <- 36
theta <- -0.6
at <- rnorm(n+offset)
Zt <- NULL
Zt[1] <- at[1]-theta*0
for(i in 2:(n+offset)){
Zt[i] <- at[i]-theta*at[i-1]
}
Zt <- Zt[(offset+1):(offset+n)]
plot(Zt, type = 'o', main = "", xlab = "t", ylab = expression(Z[t]))
estimate.ma1.mom(Zt)
ma1.mme<-function(x){
r=TSA::acf(x,plot=F)$acf[1];
if (abs(r)<0.5) return((-1+sqrt(1-4*r^2))/(2*r))
else return(NA)}
ma1.mme(Zt)
print("MME result:")
ma1.mme<-function(x){
r=TSA::acf(x,plot=F)$acf[1];
if (abs(r)<0.5) return((-1+sqrt(1-4*r^2))/(2*r))
else return(NA)}
print("MME result:")
ma1.mme(Zt)
print(cat("MME result:"),Zt)
print(cat("MME result:"),ma1.mme(Zt))
print(cat("MME result:",,ma1.mme(Zt)))
print(cat("MME result:",ma1.mme(Zt)))
ma1.mme(Zt)
print(cat("MME result:",mme))
ma1.mme<-function(x){
r=TSA::acf(x,plot=F)$acf[1];
if (abs(r)<0.5) return((-1+sqrt(1-4*r^2))/(2*r))
else return(NA)}
mme <- ma1.mme(Zt)
print(cat("MME result:",mme))
mme <- ma1.mme(Zt)
print(cat("MME result:",mme,""))
print(cat("MME result:",mme,""))
?cat
print(cat(paste("MME result:",mme,"")))
cat(paste("MME result:",mme,""))
ma1.mme<-function(x){
r=TSA::acf(x,plot=F)$acf[1];
if (abs(r)<0.5) return((-1+sqrt(1-4*r^2))/(2*r))
else return(NA)}
mme <- ma1.mme(Zt)
cat(paste("MME result:",mme,""))
?arima
arima(Zt, order = c(0,0,1), method = 'CSS')
arima(Zt, order = c(0,0,1), method = 'ols')
arima(Zt, order = c(0,0,1), method = 'CSS')
arima(Zt, order = c(0,0,1), method = 'ML')
arima(Zt, order = c(0,0,1), method = 'CSS')
ma1.mme<-function(x){
r=TSA::acf(x,plot=F)$acf[1];
if (abs(r)<0.5) return((-1+sqrt(1-4*r^2))/(2*r))
else return(NA)}
mme <- ma1.mme(Zt)
cat(paste("MME result:",mme,""))
arima(Zt, order = c(0,0,1), method = 'CSS')
arima(Zt, order = c(0,0,1), method = 'CSS')$coeff1
arima(Zt, order = c(0,0,1), method = 'CSS')$coef[1]
arima(Zt, order = c(0,0,1), method = 'MLE')$coef[1]
arima(Zt, order = c(0,0,1), method = 'ML')$coef[1]
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
cat(paste("MME result:",mme,""))
arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1]
arima(Yt, order = c(0,0,1), method = 'ML')$coef[1]
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
cat(paste("MME result:",mme,"\n"))
cat(paste("CSS result:",arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1],"\n"))
cat(paste("MLE result:",arima(Yt, order = c(0,0,1), method = 'ML')$coef[1],"\n"))
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
cat(paste("MME result:",mme,"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1],"\n"))
cat(paste("MLE result:",-arima(Yt, order = c(0,0,1), method = 'ML')$coef[1],"\n"))
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
cat(paste("MME result:",mme,"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1],"\n"))
cat(paste("MLE result:",-arima(Yt, order = c(0,0,1), method = 'ML')$coef[1],"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS'),"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1:2],,"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1:2],"\n"))
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
cat(paste("MME result:",mme,"\n"))
cat(paste("CSS result:",-arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1:2],"\n"))
cat(paste("MLE result:",-arima(Yt, order = c(0,0,1), method = 'ML')$coef[1],"\n"))
arima(Yt, order = c(0,0,1), method = 'CSS')$coef[1]
arima(Yt, order = c(0,0,1), method = 'CSS')$coef[2]
arima(Yt, order = c(0,0,1), method = 'CSS')$coef[3]
arima(Yt, order = c(0,0,1), method = 'CSS')
Yt_css <- arima(Yt, order = c(0,0,1), method = 'CSS')
View(Yt_css)
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
print("MME result:")
mme
print("CSS result:")
arima(Yt, order = c(0,0,1), method = 'CSS')
print("MLE result:")
arima(Yt, order = c(0,0,1), method = 'ML')
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
print("MME result:")
mme
print("\n CSS result:")
arima(Yt, order = c(0,0,1), method = 'CSS')
print("\n MLE result:")
arima(Yt, order = c(0,0,1), method = 'ML')
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
print("MME result:")
mme
print(\n)
set.seed(5)
offset <- 300
n <- 36
theta <- -0.6
et <- rnorm(n+offset)
Yt <- NULL
Yt[1] <- et[1]-theta*0
for(i in 2:(n+offset)){
Yt[i] <- et[i]-theta*et[i-1]
}
Yt <- Yt[(offset+1):(offset+n)]
mme <- ma1.mme(Yt)
print("MME result:")
mme
print("\n")
print("CSS result:")
arima(Yt, order = c(0,0,1), method = 'CSS')
print("MLE result:")
arima(Yt, order = c(0,0,1), method = 'ML')
# Z_t=0.7Z_t-1 + a_t - 0.4a_t-1
#library(TSA)
set.seed(1)
offset <- 300
n <- 72
theta <- 0.4
phi <- 0.7
at <- rnorm(n+offset)
Zt <- NULL
Zt[1] <- at[1]-theta*0
for(i in 2:(n+offset)){
Zt[i] <- at[i]-theta*at[i-1]+phi*Zt[i-1]
}
Zt <- Zt[(offset+1):(offset+n)]
plot(Zt, type = 'o', main = "", xlab = "t", ylab = expression(Z[t]))
arima(Zt,order=c(1,0,1),method='CSS')
arima(Zt,order=c(1,0,1),method='ML')
